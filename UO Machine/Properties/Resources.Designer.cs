//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UOMachine.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UOMachine.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Acknowledgements:
        ///
        ///Thanks to Artaxerxes, lead developer of UOAI (http://www.uoai.be). His assistance has proved invaluable and I appreciate it dearly.
        ///
        ///A big thanks to Cheffe. Though he isn&apos;t involved with the project in any way, UO Machine wouldn&apos;t exist without his hard work. I&apos;ve learned much of what I know regarding UO internals by reverse engineering EasyUO and the UO client.
        ///
        ///Thanks to Christoph Husse for EasyHook, a brilliant API hook library.
        ///
        ///Thanks to the SharpDevelop team for the nice Ava [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Credits {
            get {
                return ResourceManager.GetString("Credits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Threading;
        ///using System.Windows.Forms;
        ///using UOMachine;
        ///using UOMachine.Macros;
        ///using UOMachine.Utility;
        ///using UOMachine.Data;
        ///using UOMachine.Events;
        ///
        ///namespace UOMScript
        ///{
        ///    public class Script : IScriptInterface
        ///    {
        ///        private bool myScriptRunning = true;
        ///
        ///        public void Start()
        ///        {
        ///            while (myScriptRunning)
        ///            {
        ///                //TODO: Implement functionality
        ///                Thread.Sleep(1);
        ///            }
        ///        }
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DefaultScript {
            get {
                return ResourceManager.GetString("DefaultScript", resourceCulture);
            }
        }
    }
}
